#!/bin/bash

######################################################################
#
#  rtupdate - Updated for rtorrent 0.16.1 with libtorrent 0.13.8
#  Based on working Ubuntu 24.04 configuration
#  Copyright (c) 2015 arakasi72 (https://github.com/arakasi72)
#
#  --> Licensed under the MIT license: http://www.opensource.org/licenses/mit-license.php
#
######################################################################

PATH=/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/bin:/sbin

# CONFIRMED WORKING VERSIONS on Ubuntu 24.04
# rtorrent 0.16.1 works with libtorrent 0.13.8 (NOT 0.14.0)
DEFAULT_LIBVERS='0.13.8'
DEFAULT_RTVERS='0.16.1'

# URLs
sourcedir='https://rakshasa.github.io/rtorrent/'

# Parse arguments
passed_rtvers="$1"
libvers="$DEFAULT_LIBVERS"
rtvers="$DEFAULT_RTVERS"

[ -z "$logfile" ] && logfile="/dev/null"

# Functions
installed() {
  hash "$1" 2>/dev/null
}

check_url() {
  if wget -S -T 3 --spider "$1" 2>&1 | grep -q 'HTTP/1.1 200 OK'; then
    return 0
  else
    return 1
  fi
}

ask_user() {
  local answer
  while true; do
    read -r answer
    case "$answer" in
      [Yy]* ) return 0 ;;
      [Nn]* ) return 1 ;;
      * ) echo "Enter y or n";;
    esac
  done
}

# Check running as root
if [ "$(id -u)" != "0" ]; then
  echo "Must be run as root, or with sudo"
  exit 1
fi

# Verify repositories are accessible
rt_repo=0

echo
echo "Checking File Repositories"
echo -n "rtorrent: "
if check_url "$sourcedir"; then
  echo "OK"
else
  echo "FAIL"
  rt_repo=1
fi

if [ "$rt_repo" -eq 1 ]; then
  echo "ERROR: The rtorrent repository is offline"
  echo "Check: $sourcedir"
  exit 1
fi

# Check if xmlrpc-c is already installed (Ubuntu 24.04 package works fine)
if [ ! -d /usr/include/xmlrpc-c ]; then
  echo "Installing xmlrpc-c from Ubuntu repositories"
  aptitude -q=5 -y install libxmlrpc-core-c3-dev libxmlrpc-c++8-dev >> "$logfile" 2>&1
fi

# Version handling
if [ -n "$passed_rtvers" ]; then
  rtvers="$passed_rtvers"
  # libtorrent 0.13.8 is confirmed working with rtorrent 0.16.1
  case "$rtvers" in
    0.16.*) libvers="0.13.8" ;;
    0.15.*) libvers="0.13.8" ;;
    0.9.8) libvers="0.13.8" ;;
    0.9.6) libvers="0.13.6" ;;
    *) 
      echo "WARNING: Unknown rtorrent version, using default libtorrent $DEFAULT_LIBVERS"
      libvers="$DEFAULT_LIBVERS"
      ;;
  esac
fi

# Check current installation
if installed rtorrent; then
  rt_current="$(rtorrent -h 2>&1 | grep -om 1 "[0-9]\{1,2\}\.[0-9]\{1,2\}\.[0-9]\{1,2\}")"
  echo "Current rtorrent version: $rt_current"
  
  if [ "$rt_current" = "$rtvers" ]; then
    echo "rtorrent $rtvers is already installed"
    echo -n "Reinstall anyway? "
    if ! ask_user; then
      exit 0
    fi
  fi
else
  echo "rtorrent not currently installed"
fi

# Determine home directory
if [ -z "$home" ]; then
  home="$HOME"
fi

echo
echo "Installing libtorrent-$libvers / rtorrent-$rtvers"
echo "This combination is CONFIRMED WORKING on Ubuntu 24.04"
echo

# Create source directory
cd "$home" || exit
if [ -d source ]; then
  cd source || exit
else
  mkdir source && cd source || exit
fi

rm -rf libtorrent* rtorrent*

echo "Fetching source files..."

# Download libtorrent 0.13.8
echo "Downloading libtorrent $libvers..."
curl -LOJ# "https://github.com/rakshasa/rtorrent/releases/download/v$rtvers/libtorrent-$libvers.tar.gz" || {
  echo "ERROR: Failed to download libtorrent"
  exit 1
}
tar -xzf "libtorrent-$libvers.tar.gz"

# Download rtorrent 0.16.1
echo "Downloading rtorrent $rtvers..."
curl -LOJ# "https://github.com/rakshasa/rtorrent/releases/download/v$rtvers/rtorrent-$rtvers.tar.gz" || {
  echo "ERROR: Failed to download rtorrent"
  exit 1
}
tar -xzf "rtorrent-$rtvers.tar.gz"

# Build libtorrent
cd "libtorrent-$libvers" || exit
echo "Building libtorrent $libvers" | tee -a "$logfile"

./autogen.sh >> "$logfile" 2>&1
./configure --prefix=/usr >> "$logfile" 2>&1

if ! make -j"$(nproc)" >> "$logfile" 2>&1; then
  echo "ERROR: libtorrent build failed"
  echo "Check $logfile for details"
  exit 1
fi

make -s install >> "$logfile" 2>&1
ldconfig

echo "✓ libtorrent $libvers installed"

# Build rtorrent
cd "../rtorrent-$rtvers" || exit
echo "Building rtorrent $rtvers" | tee -a "$logfile"

./autogen.sh >> "$logfile" 2>&1
./configure --prefix=/usr --with-xmlrpc-c --enable-ipv6 >> "$logfile" 2>&1

if ! make -j"$(nproc)" >> "$logfile" 2>&1; then
  echo "ERROR: rtorrent build failed"
  echo "Check $logfile for details"
  exit 1
fi

make -s install >> "$logfile" 2>&1
ldconfig

echo "✓ rtorrent $rtvers installed"

# Verify installation
if installed rtorrent; then
  installed_version="$(rtorrent -h 2>&1 | grep -om 1 "[0-9]\{1,2\}\.[0-9]\{1,2\}\.[0-9]\{1,2\}")"
  echo
  echo "=========================================="
  echo "Installation successful!"
  echo "rtorrent version: $installed_version"
  echo "libtorrent version: $libvers"
  echo "=========================================="
  echo
  echo "Verifying installation..."
  echo "SCGI should be on port 5000:"
  lsof -i :5000 2>/dev/null | grep rtorrent || echo "  (rtorrent not currently running)"
else
  echo "ERROR: rtorrent installation failed"
  exit 1
fi

# Restart rtorrent for all users
if [ -d /var/www/rutorrent/conf/users ]; then
  echo
  echo "Restarting rtorrent for all users..."
  cd /var/www/rutorrent/conf/users || exit
  user_list=(*)
  
  for user in "${user_list[@]}"; do
    if [ "$user" != '*' ] && id "$user" &>/dev/null; then
      echo "  Restarting rtorrent for $user..."
      su "$user" -c 'rt restart' >> /dev/null 2>&1 || true
      sleep 2
    fi
  done
fi

echo
echo "Update complete!"
echo "Run 'rtorrent -h' to verify the installed version."
echo "Check ruTorrent web interface to confirm SCGI connection."
